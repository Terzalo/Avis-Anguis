title Avis Anguis
author Terzalo
homepage terzalo.com

run_rules_on_level_start
again_interval 0.1
key_repeat_interval 100
verbose_logging 

========
OBJECTS
========

Background
#44aadd

RedHead
red white yellow
00000
00000
00200
00220
00000

RedTail1
red

RedTail2
lightred

GreenHead
green white yellow
00000
00000
00200
00220
00000

GreenTail1
green

GreenTail2
lightgreen

BlueHead
blue white yellow
00000
00000
00200
00220
00000

BlueTail1
blue

BlueTail2
#0088ff

Eyes
white
.....
.0.0.
.....
.....
.....

Box1Front
yellow 
00000
0...0
0...0
0...0
00000

Box1Back
#ccbb58
00000
0...0
0...0
0...0
00000

Box2Front
lightblue 
00000
0...0
0...0
0...0
00000

Box2Back
#97bbcc
00000
0...0
0...0
0...0
00000

Box3Front
orange 
00000
0...0
0...0
0...0
00000

Box3Back
#cc762b
00000
0...0
0...0
0...0
00000

Soil
brown
00000
00000
00000
00000
00000

Grass
brown lightgreen
11111
01101
00000
00000
00000

Bush
lightgreen
.0.0.
00000
.000.
00000
.000.

Water
#77eeee blue
00000
11111
11111
11111
11111

Spikes
lightgray darkgrey
.0.0.
01110
.101.
01110
.0.0.

Banana
lightgreen yellow
....0
11111
..111
111.1
..11.

Strawberry
lightgreen red
.00..
0011.
01111
.1111
..11.

Exit
white red orange yellow lightgreen blue purple
.112.
60002
60003
50003
.544.
(.011.
00014
20144
22343
.233.)

ExitClosed
white red lightgreen blue purple
.....
..1..
.402.
..3..
.....

UndoHint1
white black darkgray
.1111
.1000
.1022
.1000
.1002

UndoHint2
white black darkgray
1111.
0001.
2201.
2001.
0001.

UndoHint3
white black darkgray
.1022
.1000
.1222
.1111
.....

UndoHint4
white black darkgray
2201.
0001.
2221.
1111.
.....

Last
transparent
(Purple
.....
.....
..0..
.....
.....)

FruitConsumed
transparent

CanMove
transparent

Player
transparent

SnakeCounter
transparent

00
transparent
(white)

01
transparent
(lightgray)

02
transparent
(gray)

03
transparent
(darkgray)

04
transparent
(black)

05
transparent

North
white
..0..
.000.
0.0.0
..0..
..0..

South
white
..0..
..0..
0.0.0
.000.
..0..

West
white
..0..
.0...
00000
.0...
..0..

East
white
..0..
...0.
00000
...0.
..0..

Active
transparent
(yellow
0...0
.....
.....
.....
0...0)

Temp
transparent

Temp2
transparent

BoxBlocker
transparent

=======
LEGEND
=======

. = Background

1 = RedHead
2 = GreenHead
3 = BlueHead

↑ = North
↓ = South
← = West
→ = East

● = Box1Front
○ = Box1Back
■ = Box2Front
□ = Box2Back
▪ = Box3Front
▫ = Box3Back

# = Soil
* = Spikes
% = Bush
~ = Water

E = ExitClosed

b = Banana
w = Strawberry

RedTail = RedTail1 or RedTail2
RedSnake = RedHead or RedTail

GreenTail = GreenTail1 or GreenTail2
GreenSnake = GreenHead or GreenTail

BlueTail = BlueTail1 or BlueTail2
BlueSnake = BlueHead or BlueTail

Tail = RedTail or GreenTail or BlueTail
Head = RedHead or GreenHead or BlueHead
Snake = RedSnake or GreenSnake or BlueSnake

Box1 = Box1Front or Box1Back
Box2 = Box2Front or Box2Back
Box3 = Box3Front or Box3Back
Box = Box1 or Box2 or Box3

Pushable = Snake or Box1Front or Box2Front or Box3Front

Ground = Soil or Grass
Hazard = Water or Spikes
Fruit = Banana or Strawberry
Solid = RedSnake or GreenSnake or BlueSnake or Box1Front or Box2Front or Box3Front or Ground or Fruit
Number = 00 or 01 or 02 or 03 or 04 or 05
Direction = North or South or West or East

=======
SOUNDS
=======

sfx0 53380107
sfx1 98382700
sfx2 20652903
sfx3 71426104
undo 91478104

================
COLLISIONLAYERS
================

Background
Direction
Exit, ExitClosed
Box1Back
Box2Back
Box3Back
Solid, BoxBlocker
Eyes
Water, Spikes
Bush
UndoHint1, UndoHint2, UndoHint3, UndoHint4

Player
Number
Last
Active
SnakeCounter
FruitConsumed
CanMove
Temp
Temp2

======
RULES
======

(======Level Start======)

(create necessary objects)

random [ ] -> [ Temp ]
[ Player ][ Temp ] -> [ Player ][ ]
[ Soil ][ Temp ] -> [ Soil Player SnakeCounter ][ ]

(plant grass for fancy look)

down [ no Ground | Soil ] -> [  | Grass ]

(fill holes in background boxes)

[ Box1Back | no Box1 | ... | Box1 ] -> [ Box1Back | Box1Back | ... | Box1 ]

(set snake counter -- late because it uses Active)

late [ SnakeCounter no Number ][RedHead][GreenHead][BlueHead] -> [ SnakeCounter 03 ][RedHead][GreenHead][BlueHead]
late [ SnakeCounter no Number ][Active Head][no Active Head] -> [ SnakeCounter 02 ][Active Head][no Active Head]
late [ SnakeCounter no Number ] -> [ SnakeCounter 01 ]

(create snakes)

up [ RedHead | no Snake South ] -> [ RedHead | RedTail2 Last South ]
down [ RedHead | no Snake North ] -> [ RedHead | RedTail2 Last North ]
left [ RedHead | no Snake East ] -> [ RedHead | RedTail2 Last East ]
right [ RedHead | no Snake West ] -> [ RedHead | RedTail2 Last West ]

up [ RedTail1 Last | no Snake South ] -> [ RedTail1 | RedTail2 Last South ]
+ down [ RedTail1 Last | no Snake North ] -> [ RedTail1 | RedTail2 Last North ]
+ left [ RedTail1 Last | no Snake East ] -> [ RedTail1 | RedTail2 Last East ]
+ right [ RedTail1 Last | no Snake West ] -> [ RedTail1 | RedTail2 Last West ]

+ up [ RedTail2 Last | no Snake South ] -> [ RedTail2 | RedTail1 Last South ]
+ down [ RedTail2 Last | no Snake North ] -> [ RedTail2 | RedTail1 Last North ]
+ left [ RedTail2 Last | no Snake East ] -> [ RedTail2 | RedTail1 Last East ]
+ right [ RedTail2 Last | no Snake West ] -> [ RedTail2 | RedTail1 Last West ]


up [ GreenHead | no Snake South ] -> [ GreenHead | GreenTail2 Last South ]
down [ GreenHead | no Snake North ] -> [ GreenHead | GreenTail2 Last North ]
left [ GreenHead | no Snake East ] -> [ GreenHead | GreenTail2 Last East ]
right [ GreenHead | no Snake West ] -> [ GreenHead | GreenTail2 Last West ]

up [ GreenTail1 Last | no Snake South ] -> [ GreenTail1 | GreenTail2 Last South ]
+ down [ GreenTail1 Last | no Snake North ] -> [ GreenTail1 | GreenTail2 Last North ]
+ left [ GreenTail1 Last | no Snake East ] -> [ GreenTail1 | GreenTail2 Last East ]
+ right [ GreenTail1 Last | no Snake West ] -> [ GreenTail1 | GreenTail2 Last West ]

+ up [ GreenTail2 Last | no Snake South ] -> [ GreenTail2 | GreenTail1 Last South ]
+ down [ GreenTail2 Last | no Snake North ] -> [ GreenTail2 | GreenTail1 Last North ]
+ left [ GreenTail2 Last | no Snake East ] -> [ GreenTail2 | GreenTail1 Last East ]
+ right [ GreenTail2 Last | no Snake West ] -> [ GreenTail2 | GreenTail1 Last West ]

up [ BlueHead | no Snake South ] -> [ BlueHead | BlueTail2 Last South ]
down [ BlueHead | no Snake North ] -> [ BlueHead | BlueTail2 Last North ]
left [ BlueHead | no Snake East ] -> [ BlueHead | BlueTail2 Last East ]
right [ BlueHead | no Snake West ] -> [ BlueHead | BlueTail2 Last West ]

up [ BlueTail1 Last | no Snake South ] -> [ BlueTail1 | BlueTail2 Last South ]
+ down [ BlueTail1 Last | no Snake North ] -> [ BlueTail1 | BlueTail2 Last North ]
+ left [ BlueTail1 Last | no Snake East ] -> [ BlueTail1 | BlueTail2 Last East ]
+ right [ BlueTail1 Last | no Snake West ] -> [ BlueTail1 | BlueTail2 Last West ]

+ up [ BlueTail2 Last | no Snake South ] -> [ BlueTail2 | BlueTail1 Last South ]
+ down [ BlueTail2 Last | no Snake North ] -> [ BlueTail2 | BlueTail1 Last North ]
+ left [ BlueTail2 Last | no Snake East ] -> [ BlueTail2 | BlueTail1 Last East ]
+ right [ BlueTail2 Last | no Snake West ] -> [ BlueTail2 | BlueTail1 Last West ]

(======Pre-Movement======)

(if there's an undo hint, then a snake is dead -- skip all moves until player presses undo)

[ UndoHint1 ] -> cancel

(switch active snake)

[action Player][Active RedHead][GreenHead] -> [Player][RedHead][Active GreenHead]
[action Player][Active RedHead][BlueHead] -> [Player][RedHead][Active BlueHead]
[action Player][Active GreenHead][BlueHead] -> [Player][GreenHead][Active BlueHead]
[action Player][Active GreenHead][RedHead] -> [Player][GreenHead][Active RedHead]
[action Player][Active BlueHead][RedHead] -> [Player][BlueHead][Active RedHead]
[action Player][Active BlueHead][GreenHead] -> [Player][BlueHead][Active GreenHead]

(check if there's an active snake head)

random [ ] -> [ Temp ]
[ Active Head ][ Temp ] -> [ Active Head ][ ]
[ Head ][ Temp ] -> [ Active Head ][ ]

(make whole snakes Active)

[ Active RedHead ][ no Active RedSnake ] -> [ Active RedHead ][ Active RedSnake ]
[ Active RedHead ][ Active no RedSnake ] -> [ Active RedHead ][ no RedSnake ]

[ Active GreenHead ][ no Active GreenSnake ] -> [ Active GreenHead ][ Active GreenSnake ]
[ Active GreenHead ][ Active no GreenSnake ] -> [ Active GreenHead ][ no GreenSnake ]

[ Active BlueHead ][ no Active BlueSnake ] -> [ Active BlueHead ][ Active BlueSnake ]
[ Active BlueHead ][ Active no BlueSnake ] -> [ Active BlueHead ][ no BlueSnake ]

(======Movement======)

(apply gravity)

startloop
rigid down [ stationary RedSnake | no Ground ] -> [ down RedSnake |  ]
+ rigid [ down RedSnake | stationary RedSnake ] -> [ down RedSnake | down RedSnake ]

rigid down [ stationary GreenSnake | no Ground ] -> [ down GreenSnake |  ]
+ rigid [ down GreenSnake | stationary GreenSnake ] -> [ down GreenSnake | down GreenSnake ]

rigid down [ stationary BlueSnake | no Ground ] -> [ down BlueSnake |  ]
+ rigid [ down BlueSnake | stationary BlueSnake ] -> [ down BlueSnake | down BlueSnake ]

rigid down [ stationary Box1 | no Ground ] -> [ down Box1 |  ]
+ rigid [ down Box1 | stationary Box1 ] -> [ down Box1 | down Box1 ]

rigid down [ stationary Box2 | no Ground ] -> [ down Box2 |  ]
+ rigid [ down Box2 | stationary Box2 ] -> [ down Box2 | down Box2 ]

rigid down [ stationary Box3 | no Ground ] -> [ down Box3 |  ]
+ rigid [ down Box3 | stationary Box3 ] -> [ down Box3 | down Box3 ]
endloop

(check if player can move -- no snakes and boxes are falling)

[ Player no CanMove ] -> [ Player CanMove ]

[ CanMove ][ moving Pushable ] -> [  ][ moving Pushable ]

(using again prevents player from making undoable moves while snakes are falling)

[ Player ] -> again

(if not falling, apply movement to active Head)

[ CanMove ][ moving Player ][ stationary Head Active ] -> [ CanMove ][ moving Player ][ moving Head Active ] sfx0

(late-check if head of active snake moved at all)

[ CanMove ][ Active > Head ] -> [ CanMove ][ Active > Head Temp ]
late [ Active Head Temp ] -> cancel
late [ Temp ] -> [ ]

(don't let snakes move into themselves)

[ CanMove ][ > Head Active | Snake Active ] -> cancel

(consume fruit)

[ CanMove ][ > Head Active | Fruit ][ Player ] -> [ CanMove ][ > Head Active |  ][ Player FruitConsumed ] sfx1

(move the whole snake after the head)

[ CanMove ][ up Head Active ] -> [ CanMove ][ up Head Active North ]
[ CanMove ][ down Head Active ] -> [ CanMove ][ down Head Active South ]
[ CanMove ][ left Head Active ] -> [ CanMove ][ left Head Active West ]
[ CanMove ][ right Head Active ] -> [ CanMove ][ right Head Active East ]

[ CanMove ][ > Head Active ][ stationary Tail Active North ] -> [ CanMove ][ > Head Active ][ up Tail Active North ]
[ CanMove ][ > Head Active ][ stationary Tail Active South ] -> [ CanMove ][ > Head Active ][ down Tail Active South ]
[ CanMove ][ > Head Active ][ stationary Tail Active West ] -> [ CanMove ][ > Head Active ][ left Tail Active West ]
[ CanMove ][ > Head Active ][ stationary Tail Active East ] -> [ CanMove ][ > Head Active ][ right Tail Active East ]

(let snakes push each other and boxes)

startloop
rigid [ CanMove ][ moving RedSnake | stationary RedSnake ] -> [ CanMove ][ moving RedSnake | moving RedSnake ]
+ [ CanMove ][ >  Pushable no RedSnake | stationary RedSnake ] -> [ CanMove ][  >  Pushable no RedSnake | > RedSnake  ]

 rigid [ CanMove ][ moving GreenSnake | stationary GreenSnake ] -> [ CanMove ][ moving GreenSnake | moving GreenSnake ]
+ [ CanMove ][ >  Pushable no GreenSnake | stationary GreenSnake ] -> [ CanMove ][  >  Pushable no GreenSnake | > GreenSnake  ]

rigid [ CanMove ][ moving BlueSnake | stationary BlueSnake ] -> [ CanMove ][ moving BlueSnake | moving BlueSnake ]
+ [ CanMove ][ >  Pushable no BlueSnake | stationary BlueSnake ] -> [ CanMove ][  >  Pushable no BlueSnake | > BlueSnake  ]

rigid [ CanMove ][ moving Box1 | stationary Box1 ] -> [ CanMove ][ moving Box1 | moving Box1 ]
+ [ CanMove ][ >  Pushable no Box1Front | stationary Box1Front ] -> [ CanMove ][  >  Pushable no Box1Front | > Box1Front  ]

rigid [ CanMove ][ moving Box2 | stationary Box2 ] -> [ CanMove ][ moving Box2 | moving Box2 ]
+ [ CanMove ][ >  Pushable no Box2Front | stationary Box2Front ] -> [ CanMove ][  >  Pushable no Box2Front | > Box2Front  ]

rigid [ CanMove ][ moving Box3 | stationary Box3 ] -> [ CanMove ][ moving Box3 | moving Box3 ]
+ [ CanMove ][ >  Pushable no Box3Front | stationary Box3Front ] -> [ CanMove ][  >  Pushable no Box3Front | > Box3Front  ]
endloop

(don't let snakes commit suicide and kill each other)

[ CanMove ][ > Snake | Hazard ] -> cancel

(don't let boxes fall through spikes)

[ > Pushable no Snake | Spikes ] -> [ > Pushable | Spikes BoxBlocker ]
late [ BoxBlocker ] -> [ ]

(stop boxes and snakes from moving into active snake)
(this is necessary to prevent snakes from pushing objects that will clash into them from behind -- deadlock)

[ CanMove ][ > Pushable no RedSnake | RedSnake Active no Last ] -> cancel
[ CanMove ][ > Pushable no GreenSnake | GreenSnake Active no Last ] -> cancel
[ CanMove ][ > Pushable no BlueSnake | BlueSnake Active no Last ] -> cancel

[ CanMove ][ > Pushable no RedSnake | perpendicular RedSnake Active Last ] -> cancel
[ CanMove ][ > Pushable no GreenSnake | perpendicular GreenSnake Active Last ] -> cancel
[ CanMove ][ > Pushable no BlueSnake | perpendicular BlueSnake Active Last ] -> cancel

(move snake attributes)

[ > Snake stationary Active ] -> [ > Snake > Active ]
[ > Tail stationary Last ] -> [ > Tail > Last ]

(don't move Last mark if fruit was consumed)

[ FruitConsumed ][ > Tail Active > Last ] -> [][ > Tail Active stationary Last ]
[ > Snake stationary Active ] -> [ > Snake > Active ]

(only move directions if move wasn't made by player)

[ CanMove ][ > Snake stationary Direction no Active ] -> [ CanMove ][ > Snake > Direction ]
[ stationary Player ][ > Snake stationary Direction ] -> [ stationary Player ][ > Snake > Direction ]

(remove direction from last part if snake isn't growing)

[ CanMove ][ > Tail Active > Last Direction ] -> [ CanMove ][ > Tail Active > Last ]

(======Post-Movement======)

(reset temporary objects)

late [ CanMove ] -> [ ]

late [ FruitConsumed ] -> [ ]

(create new snake part)

late [ Active RedSnake ][ Last no Snake | RedTail1 ] -> [ Active RedSnake ][ Last RedTail2 Active | RedTail1 ]
late [ Active RedSnake ][ Last no Snake | RedTail2 ] -> [ Active RedSnake ][ Last RedTail1 Active | RedTail2 ]

late [ Active GreenSnake ][ Last no Snake | GreenTail1 ] -> [ Active GreenSnake ][ Last GreenTail2 Active | GreenTail1 ]
late [ Active GreenSnake ][ Last no Snake | GreenTail2 ] -> [ Active GreenSnake ][ Last GreenTail1 Active | GreenTail2 ]

late [ Active BlueSnake ][ Last no Snake | BlueTail1 ] -> [ Active BlueSnake ][ Last BlueTail2 Active | BlueTail1 ]
late [ Active BlueSnake ][ Last no Snake | BlueTail2 ] -> [ Active BlueSnake ][ Last BlueTail1 Active | BlueTail2 ]


(snakes die when touching water and spikes)

late [ RedSnake Hazard ][ RedSnake Last ] -> [ RedSnake Hazard ][ RedSnake ]
late [ RedSnake Hazard ][ RedSnake Number ] -> [ RedSnake Hazard ][ RedSnake ]
late [ RedSnake Hazard ][ RedSnake no Hazard ] -> [ RedSnake Hazard ][ ]

late [ GreenSnake Hazard ][ GreenSnake Last ] -> [ GreenSnake Hazard ][ GreenSnake ]
late [ GreenSnake Hazard ][ GreenSnake Number ] -> [ GreenSnake Hazard ][ GreenSnake ]
late [ GreenSnake Hazard ][ GreenSnake no Hazard ] -> [ GreenSnake Hazard ][ ]

late [ BlueSnake Hazard ][ BlueSnake Last ] -> [ BlueSnake Hazard ][ BlueSnake ]
late [ BlueSnake Hazard ][ BlueSnake Number ] -> [ BlueSnake Hazard ][ BlueSnake ]
late [ BlueSnake Hazard ][ BlueSnake no Hazard ] -> [ BlueSnake Hazard ][ ]

(draw undo hint when snake dies)

late random up [ Snake Hazard | ] -> [ Snake Hazard | UndoHint1 ]
late random right [ UndoHint1 | ] -> [ UndoHint1 | UndoHint2 ]
late random down [ UndoHint1 | ] -> [ UndoHint1 | UndoHint3 ]
late random right [ UndoHint3 | ] -> [ UndoHint3 | UndoHint4 ]

late [ Snake Hazard ] -> [ Hazard ] sfx3

(boxes vanish when touching water)

late [ Box1 Water ][ Box1 no Water ] -> [ Box1 Water ][ ]
late [ Box2 Water ][ Box2 no Water ] -> [ Box2 Water ][ ]
late [ Box3 Water ][ Box3 no Water ] -> [ Box3 Water ][ ]

late [ Box Water ] -> [ Water ]

(check if there are fruits left)

late [ ExitClosed ] -> [ Exit ]
late [ Fruit ][ Exit ] -> [ Fruit ][ ExitClosed ]

(remove snakes that reached portal and count down)

late [ RedHead Exit ][ RedSnake Last ] -> [ RedHead Exit ][ RedSnake ]
late [ RedHead Exit ][ RedSnake Number ] -> [ RedHead Exit ][ RedSnake ]
late [ RedHead Exit ][ RedSnake no Exit ] -> [ RedHead Exit ][ ]

late [ GreenHead Exit ][ GreenSnake Last ] -> [ GreenHead Exit ][ GreenSnake ]
late [ GreenHead Exit ][ GreenSnake Number ] -> [ GreenHead Exit ][ GreenSnake ]
late [ GreenHead Exit ][ GreenSnake no Exit ] -> [ GreenHead Exit ][ ]

late [ BlueHead Exit ][ BlueSnake Last ] -> [ BlueHead Exit ][ BlueSnake ]
late [ BlueHead Exit ][ BlueSnake Number ] -> [ BlueHead Exit ][ BlueSnake ]
late [ BlueHead Exit ][ BlueSnake no Exit ] -> [ BlueHead Exit ][ ]

late [ Head Exit ][ SnakeCounter 01 ] -> [ Head Exit ][ SnakeCounter 00 ]
late [ Head Exit ][ SnakeCounter 02 ] -> [ Head Exit ][ SnakeCounter 01 ]
late [ Head Exit ][ SnakeCounter 03 ] -> [ Head Exit ][ SnakeCounter 02 ]

late [ Head Exit ][ Last no Snake ] -> [ Head Exit ][ ]
late [ Head Exit ][ Direction no Snake ] -> [ Head Exit ][ ]

late [ Head Exit ] -> [ Exit ] sfx2

(add eyes to active snake)

late [ Eyes ] -> []
late [ Active Head ] -> [ Active Head Eyes ]

==============
WINCONDITIONS
==============

Any SnakeCounter on 00

=======
LEVELS
=======

..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................................
..........................b.....******....
...............................*######....
.........................▪w.....*#####....
........................▪▪.......e..###...
......................#########......##...
.....................#########.......##...
.....................■□□■...##........##..
.....................#..■..↓#.........##..
.................1←..#.#■..↓#.........##..
.........→2......●●..#.#■.3←#........###..
......######..########.##.###........##...
........####..###########............##...
..........##***##########............##...
....................####.............###..
.....................###..............##..
......................##..............##..
......................##..............##..
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
